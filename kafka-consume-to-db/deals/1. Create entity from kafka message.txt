Есть вот такой JSON-объект:

{
	"type": "deal",
	"action": "add",
	"records": [
		{
			"Deal": "856",
			"ExternalID": "",
			"Login": "777800",
			"Dealer": "0",
			"Order": "831",
			"Action": "0",
			"Entry": "0",
			"Reason": "16",
			"Digits": "3",
			"DigitsCurrency": "2",
			"ContractSize": "100000.00",
			"Time": "1760470333",
			"TimeMsc": "1760470333973",
			"Symbol": "USDJPY",
			"Price": "151.795",
			"Volume": "100",
			"VolumeExt": "1000000",
			"Profit": "0.00",
			"Storage": "0.00",
			"Commission": "0.00",
			"Fee": "0.00",
			"RateProfit": "0.00658913",
			"RateMargin": "1.00000000",
			"ExpertID": "0",
			"PositionID": "831",
			"PartyID": "0",
			"Comment": "",
			"ProfitRaw": "0.00",
			"PricePosition": "0.000",
			"PriceSL": "0.000",
			"PriceTP": "0.000",
			"VolumeClosed": "0",
			"VolumeClosedExt": "0",
			"TickValue": "0.00000000",
			"TickSize": "0.00000000",
			"Flags": "0",
			"Gateway": "",
			"PriceGateway": "0.000",
			"VolumeGatewayExt": "0",
			"ActionGateway": "0",
			"ModifyFlags": "0",
			"Value": "0.00",
			"ApiData": [
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				}
			],
			"MarketBid": "151.759",
			"MarketAsk": "151.789",
			"MarketLast": "0.000"
		}
	]
}

Твои задачи:

1. В объекте есть поле records, содержащее массив объектов, в данном примере массив из одного объекта. Тебе нужно создать ent-сущность (схему и сгенерированный код) Mt5Deal, поля которой будут соответствовать полям одного элемента из массива records. Таблицу в БД назови "mt5_deals". Также сгенерируй SQL-скрипт миграции, создающий эту таблицу в Postgresql. В качестве primary key используй поле "Deal", но в сущности/таблице назови его ID. В новой сущности должны быть все поля из объекта - одного элемента из массива records, кроме поля ApiData, его нигде не задействуй. У всех полей тип данных в БД varchar(1024), кроме ID, у него varchar(20), у поля Comment тип text. В самой ent все поля - string. В БД переведи все названия полей в нижний регистр с _ между словами. Также дополнительно добавь стандартные поля CreatedAt, UpdatedAt, DeletedAt - все с типом time.Time. 

2. Для созданной новой сущности сгенерируй методы репозитория, реализующие типовые CRUD операции. В методах репозитория используй как источник данных в аргументах сам экземпляр сущности. Никаких отдельных payload-структур на входе в update/create методах репозитория быть не должно.

3. Создай dto-структуру MtDealsMessage, полностью повторяющую JSON-пример, включая как records в виде массива, так и родительские поля type и action.