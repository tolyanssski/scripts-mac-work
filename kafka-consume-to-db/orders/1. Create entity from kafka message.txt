Есть вот такой JSON-объект:

{
	"type": "order",
	"action": "delete",
	"records": [
		{
			"Order": "830",
			"ExternalID": "",
			"Login": "777800",
			"Dealer": "0",
			"Symbol": "GBPUSD",
			"Digits": "5",
			"DigitsCurrency": "2",
			"ContractSize": "100000.00",
			"State": "4",
			"Reason": "16",
			"TimeSetup": "1760470008",
			"TimeExpiration": "0",
			"TimeDone": "1760470008",
			"TimeSetupMsc": "1760470008434",
			"TimeDoneMsc": "1760470008435",
			"ModifyFlags": "0",
			"Type": "1",
			"TypeFill": "0",
			"TypeTime": "0",
			"PriceOrder": "1.33254",
			"PriceTrigger": "0.00000",
			"PriceCurrent": "1.33254",
			"PriceSL": "0.00000",
			"PriceTP": "0.00000",
			"VolumeInitial": "200",
			"VolumeInitialExt": "2000000",
			"VolumeCurrent": "0",
			"VolumeCurrentExt": "0",
			"ExpertID": "0",
			"PositionID": "830",
			"PositionByID": "0",
			"PartyID": "0",
			"Comment": "",
			"RateMargin": "1.33254000",
			"ActivationMode": "0",
			"ActivationTime": "0",
			"ActivationPrice": "0.00000",
			"ActivationFlags": "0",
			"ApiData": [
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				}
			]
		}
	]
}

Твои задачи:

1. В объекте есть поле records, содержащее массив объектов, в данном примере массив из одного объекта. Тебе нужно создать ent-сущность (схему и сгенерированный код) Mt5Order, поля которой будут соответствовать полям одного элемента из массива records. Таблицу в БД назови "mt5_orders". Также сгенерируй SQL-скрипт миграции, создающий эту таблицу в Postgresql. В качестве primary key используй поле "Order", но в сущности/таблице назови его ID. В новой сущности должны быть все поля из объекта - одного элемента из массива records, кроме поля ApiData, его нигде не задействуй. У всех полей тип данных в БД varchar(1024), кроме ID, у него varchar(20), у поля Comment тип text. В самой ent все поля - string. В БД переведи все названия полей в нижний регистр с _ между словами. Также дополнительно добавь стандартные поля CreatedAt, UpdatedAt, DeletedAt - все с типом time.Time. 

2. Для созданной новой сущности сгенерируй методы репозитория, реализующие типовые CRUD операции. В методах репозитория используй как источник данных в аргументах сам экземпляр сущности. Никаких отдельных payload-структур на входе в update/create методах репозитория быть не должно.

3. Создай dto-структуру MtOrdersMessage, полностью повторяющую JSON-пример, включая как records в виде массива, так и родительские поля type и action.