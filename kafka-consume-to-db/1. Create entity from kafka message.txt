Есть вот такой JSON-объект:

{
	"type": "position",
	"action": "add",
	"records": [
		{
			"Position": "832",
			"ExternalID": "",
			"Login": "777800",
			"Dealer": "0",
			"Symbol": "USDCHF",
			"Action": "1",
			"Digits": "5",
			"DigitsCurrency": "2",
			"Reason": "16",
			"ContractSize": "100000.00",
			"TimeCreate": "1760470510",
			"TimeUpdate": "1760470510",
			"TimeCreateMsc": "1760470510526",
			"TimeUpdateMsc": "1760470510526",
			"ModifyFlags": "0",
			"PriceOpen": "0.80077",
			"PriceCurrent": "0.80117",
			"PriceSL": "0.00000",
			"PriceTP": "0.00000",
			"Volume": "100",
			"VolumeExt": "1000000",
			"Profit": "-0.50",
			"Storage": "0.00",
			"RateProfit": "1.24817454",
			"RateMargin": "1.00000000",
			"ExpertID": "0",
			"ExpertPositionID": "832",
			"Comment": "",
			"ActivationMode": "0",
			"ActivationTime": "0",
			"ActivationPrice": "0.00000",
			"ActivationFlags": "0",
			"ActionGateway": "0",
			"PriceGateway": "0.00000",
			"VolumeGatewayExt": "0",
			"ApiData": [
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				},
				{
					"AppID": "0",
					"ID": "0",
					"ValueInt": "0",
					"ValueUInt": "0",
					"ValueDouble": "0.00000000"
				}
			]
		}
	]
}

Твои задачи:

1. В объекте есть поле records, содержащее массив объектов, в данном примере массив из одного объекта. Тебе нужно создать ent-сущность (схему и сгенерированный код) Mt5Position, поля которой будут соответствовать полям одного элемента из массива records. Таблицу в БД назови "mt5_positions". Также сгенерируй SQL-скрипт миграции, создающий эту таблицу в Postgresql. В качестве primary key используй поле "Position", но в сущности/таблице назови его ID. В новой сущности должны быть все поля из объекта - одного элемента из массива records, кроме поля ApiData, его нигде не задействуй. У всех полей тип данных в БД varchar(255), в ent - string. Также дополнительно добавь стандартные поля CreatedAt, UpdatedAt, DeletedAt - все с типом time.Time. На поле Login поставь в БД простой индекс.

2. Для созданной новой сущности сгенерируй методы репозитория, реализующие типовые CRUD операции.

3. Создай dto-структуру MtPositionsMessage, полностью повторяющую JSON-пример, включая как records в виде массива, так и родительские поля type и action.